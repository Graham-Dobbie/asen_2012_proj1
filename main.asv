clc; 
close all; 
clear; 

%reading in data 
static_test = readmatrix('Static Test Stand Calibration Case 1.xlsx');

<<<<<<< HEAD
%convert mv to lbs


raw_data = load("mydata.mat");
[data,hdr]=deal(S.data,S.hdr);

F1_data = test_runs(:,1);
F2_data = test_runs(:,2);

fit_model_F1 = @(load_cell_voltage) mvToForce(load_cell_voltage, f1_poly);
fit_model_F2 = @(load_cell_voltage) mvToForce(load_cell_voltage, f2_poly);

F1_load = fit_model_F1(F1_data);
F2_load = fit_model_F2(F2_data);








function force = mvToForce(mv_data, poly)
    force = poly(1)*mv_data + poly(2);
end

=======

%convert mv to lbs 

weight = static_test(:,1);
F1 = static_test(:,4);
F2 = static_test(:,5);

plot(F2,weight, 'Color', 'g')
hold on
plot(F1,weight)
legend('F2','F1')
hold off 

polyorder = 1;
[F1poly,S1] = polyfit(F1, weight, polyorder);
[F2poly,S2] = polyfit(F2, weight, polyorder);

x = 0:max(F1)+10;
x2 = 0:max(F2)+20;
[weight_fit1, delta1] = polyval(F1poly, x, S1);
[weight_fit2, delta2] = polyval(F2poly,x2, S2);


figure(1)
scatter(F1, weight)
hold on
plot(x,weight_fit1)

figure(2)
scatter(F2,weight )
hold on
plot(x2,weight_fit2)

sigma_y1 = sqrt(1/(length(x)-2) * sum((weight_fit1-weight).^2));

sigma_y2 = sqrt(1/(length(x2)-2) * sum((weight_fit2-weight).^2));

plot(x,weight_fit1+2*sigma_y %plotting 95% confidence interval of y data
plot(x,yfit-2*sigma_y,'--','Color',cmap(5,:),'LineWidth',2, 'HandleVisibility','off')
>>>>>>> 0a02a5f3ccf153708efca090cb796e026a976bdc

